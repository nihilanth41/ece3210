Turbo Assembler	 Version 4.1	    04/21/15 13:45:18	    Page 1
final.asm



      1					 EXTRN GET_TIME: FAR
      2					 EXTRN GET_DATE: FAR
      3					 EXTRN CONV_ASCII: FAR
      4					 PUBLIC	CENTURY,YEAR,MONTH,DAY,CLK_STATUS,HOURS,MINUTES,SECONDS,DAYLIGHT,RTC_STATUS,	    +
      5					 CHAR_PACKED,CHAR_H,CHAR_L
      6					 INCLUDE final.mac
1     7					 PRINT_STR MACRO STRING
1     8						 MOV DX,OFFSET STRING
1     9					     MOV AH,9
1    10						 INT 21H
1    11					 ENDM
1    12
1    13					 GET_STR MACRO BUFFER
1    14						 MOV DX,OFFSET BUFFER
1    15						 MOV AH,0AH
1    16						 INT 21H
1    17					 ENDM
1    18
1    19					 GET_CHAR MACRO	CHAR
1    20						 MOV AH,01H
1    21						 INT 21H
1    22						 MOV CHAR,AL
1    23					 ENDM
1    24
1    25					 GET_CHARNE MACRO
1    26						 MOV AH,07H		 ;no echo option
1    27						 INT 21H
1    28					 ENDM
1    29
1    30					 PRINT_CHAR MACRO CHAR
1    31						 MOV DL,CHAR
1    32						 MOV AH,02H
1    33						 INT 21H
1    34					 ENDM
1    35
1    36					 RET_DOS MACRO
1    37						 MOV AX,4C00H	 ;return to DOS
1    38						 INT 21H
1    39					 ENDM
     40					 ;LABEL	COLUMNS	79
     41	    0000			 .MODEL	SMALL
     42					 .386
     43	    0000			 .STACK	64
     44					 ;----------------------------------------
     45	    0000			 .DATA
     46	    0000  2D 2D	4D 65 6E 75 20+	 MENU_STR db '--Menu Interface--','$'
     47		  49 6E	74 65 72 66 61+
     48		  63 65	2D 2D 24
     49	    0013  0A 0D	5B 44 5D 20 44+	 OPT1 db 0AH,0DH,'[D] Display the date','$'
     50		  69 73	70 6C 61 79 20+
     51		  74 68	65 20 64 61 74+
     52		  65 24
     53	    002A  0A 0D	5B 54 5D 20 44+	 OPT2 db 0AH,0DH,'[T] Display the time','$'
     54		  69 73	70 6C 61 79 20+
     55		  74 68	65 20 74 69 6D+
     56		  65 24
     57	    0041  0A 0D	5B 51 5D 20 45+	 OPT3 db 0AH,0DH,'[Q] Exit','$'
Turbo Assembler	 Version 4.1	    04/21/15 13:45:18	    Page 2
final.asm



     58		  78 69	74 24
     59	    004C  0A 0D	54 6F 64 61 79+	 DATE_STR db 0AH,0DH,"Today's date: ",'$'
     60		  27 73	20 64 61 74 65+
     61		  3A 20	24
     62	    005D  0A 0D	43 75 72 72 65+	 TIME_STR db 0AH,0DH,"Current time: ",'$'
     63		  6E 74	20 74 69 6D 65+
     64		  3A 20	24
     65	    006E  ??			 USR_INPUT db ?
     66					 ;vars for getdate
     67	    006F  ??			 CENTURY db ?
     68	    0070  ??			 MONTH db ?
     69	    0071  ??			 DAY db	?
     70	    0072  ??			 YEAR db ?
     71	    0073  ??			 CLK_STATUS db ?
     72	    0074  08 3F	08*(3F)	24	 D_STR	db 8,'?',8 dup('?'),'$'
     73	    007F  08 3F	08*(3F)	24	 T_STR	db 8,'?',8 dup('?'),'$'
     74					 ;vars for gettime
     75	    008A  ??			 HOURS db ?
     76	    008B  ??			 MINUTES db ?
     77	    008C  ??			 SECONDS db ?
     78	    008D  ??			 DAYLIGHT db ?
     79	    008E  ??			 RTC_STATUS db ?
     80					 ;vars for convascii
     81	    008F  ??			 CHAR_PACKED db	?
     82	    0090  ??			 CHAR_H	db ?
     83	    0091  ??			 CHAR_L	db ?
     84					 ;----------------------------------------
     85	    0092			 .CODE
     86	    0000			 MAIN PROC FAR
     87	    0000  B8 0000s		     MOV AX,@DATA
     88	    0003  8E D8			     MOV DS,AX
     89	    0005  8E C0				 MOV ES,AX
     90						 ;clear	screen
     91	    0007  B8 0600			 mov ax,0600h
     92	    000A  B7 07				 mov bh,07
     93	    000C  B9 0000			 mov cx,0
     94	    000F  BA 184F			 mov dx,184fh
     95	    0012  CD 10				 int 10h
     96						 ;set cursor 0,0
     97	    0014  B4 02				 mov ah,02
     98	    0016  B7 00				 mov bh,00
     99	    0018  B2 00				 mov dl,0
    100	    001A  B6 00				 mov dh,0
    101	    001C  CD 10				 int 10h
    102						 ;print	background
    103	    001E  B4 09				 mov ah,09h
    104	    0020  B7 00				 mov bh,0
    105	    0022  B0 20				 mov al,20h
    106	    0024  B9 1600			 mov cx,1600h
    107	    0027  B3 1F				 mov bl,1fh
    108	    0029  CD 10				 int 10h
    109
    110
    111	    002B			 BEGIN:
    112						 ;print	menu options
    113	    002B  B0 00				 mov al,0
    114	    002D  B7 00				 mov bh,0
Turbo Assembler	 Version 4.1	    04/21/15 13:45:18	    Page 3
final.asm



    115	    002F  B3 24				 mov bl,024h	 ;1110_0000b
    116	    0031  B9 0012			 mov cx,18
    117	    0034  B2 12				 mov dl,18
    118	    0036  B6 02				 mov dh,2
    119	    0038  BD 0000r			 mov bp, offset	MENU_STR
    120	    003B  B4 13				 mov ah,13h
    121	    003D  CD 10				 int 10h
    122						 ;PRINT_STR OPT1
    123	    003F  B0 01				 mov al,1
    124	    0041  B7 00				 mov bh,0
    125	    0043  B3 E4				 mov bl,0E4h	 ;1110_0000b
    126	    0045  B9 0016			 mov cx,22
    127	    0048  B2 12				 mov dl,18
    128	    004A  B6 02				 mov dh,2
    129	    004C  BD 0013r			 mov bp, offset	OPT1
    130	    004F  B4 13				 mov ah,13h
    131	    0051  CD 10				 int 10h
    132						 ;PRINT_STR OPT2
    133	    0053  B0 01				 mov al,1
    134	    0055  B7 00				 mov bh,0
    135	    0057  B3 E4				 mov bl,0E4h	 ;1110_0000b
    136	    0059  B9 0016			 mov cx,22
    137	    005C  B2 12				 mov dl,18
    138	    005E  B6 03				 mov dh,3
    139	    0060  BD 002Ar			 mov bp, offset	OPT2
    140	    0063  B4 13				 mov ah,13h
    141	    0065  CD 10				 int 10h
    142						 ;PRINT_STR OPT3
    143	    0067  B0 01				 mov al,1
    144	    0069  B7 00				 mov bh,0
    145	    006B  B3 E4				 mov bl,0E4h	 ;1110_0000b
    146	    006D  B9 000A			 mov cx,10
    147	    0070  B2 00				 mov dl,0
    148	    0072  B6 04				 mov dh,4
    149	    0074  BD 0041r			 mov bp, offset	OPT3
    150	    0077  B4 13				 mov ah,13h
    151	    0079  CD 10				 int 10h
    152						 ;get menu option from user
    153						 GET_CHARNE
1   154	    007B  B4 07				 MOV AH,07H		 ;no echo option
1   155	    007D  CD 21				 INT 21H
    156	    007F  A2 006Er			 mov USR_INPUT,AL
    157
    158						 ;evaluate user	input
    159						 ;look for Q/q
    160	    0082  3C 51				 cmp AL,'Q'
    161	    0084  0F 84	00F2			 je QUIT
    162	    0088  3C 71				 cmp AL,'q'
    163	    008A  0F 84	00EC			 je QUIT
    164
    165	    008E  3C 44				 cmp AL,'D'
    166	    0090  74 16	90 90			 je GETDATE
    167	    0094  3C 64				 cmp AL,'d'
    168	    0096  74 10	90 90			 je GETDATE
    169
    170	    009A  3C 54				 cmp AL,'T'
    171	    009C  74 73	90 90			 je GETTIME
Turbo Assembler	 Version 4.1	    04/21/15 13:45:18	    Page 4
final.asm



    172	    00A0  3C 74				 cmp AL,'t'
    173	    00A2  74 6D	90 90			 je GETTIME
    174
    175	    00A6  EB 83				 jmp BEGIN		 ;repeat loop
    176	    00A8			 GETDATE:
    177	    00A8  9A 00000000se			 call GET_DATE
    178						 PRINT_STR DATE_STR
1   179	    00AD  BA 004Cr			 MOV DX,OFFSET DATE_STR
1   180	    00B0  B4 09			     MOV AH,9
1   181	    00B2  CD 21				 INT 21H
    182	    00B4  8A 1E	0070r			 mov bl,MONTH
    183	    00B8  88 1E	008Fr			 mov CHAR_PACKED,BL
    184	    00BC  9A 00000000se			 call CONV_ASCII
    185	    00C1  A2 0074r			 mov [D_STR], AL
    186	    00C4  88 26	0075r			 mov [D_STR]+1,	AH
    187	    00C8  C6 06	0076r 2F		 mov	 [D_STR]+2, '/'
    188	    00CD  8A 1E	0071r			 mov bl,DAY
    189	    00D1  88 1E	008Fr			 mov CHAR_PACKED,bl
    190	    00D5  9A 00000000se			 call CONV_ASCII
    191	    00DA  A2 0077r			 mov [D_STR]+3,	AL
    192	    00DD  88 26	0078r			 mov [D_STR]+4,	AH
    193	    00E1  C6 06	0079r 2F		 mov [D_STR]+5,	'/'
    194	    00E6  8A 1E	0072r			 mov bl,YEAR
    195	    00EA  88 1E	008Fr			 mov CHAR_PACKED,bl
    196	    00EE  9A 00000000se			 call CONV_ASCII
    197	    00F3  A2 007Ar			 mov [D_STR]+6,	AL
    198	    00F6  88 26	007Br			 mov [D_STR]+7,	AH
    199						 ;PRINT_STR D_STR
    200	    00FA  B0 01				 mov al,1
    201	    00FC  B7 00				 mov bh,0
    202	    00FE  B3 84				 mov bl,084h	 ;1110_0000b
    203	    0100  B9 0008			 mov cx,8
    204	    0103  B2 20				 mov dl,32
    205	    0105  B6 06				 mov dh,6
    206	    0107  BD 0074r			 mov bp, offset	D_STR
    207	    010A  B4 13				 mov ah,13h
    208	    010C  CD 10				 int 10h
    209	    010E  E9 FF1A			 jmp BEGIN		 ;go back to menu loop
    210
    211	    0111			 GETTIME:
    212	    0111  9A 00000000se			 call GET_TIME
    213						 PRINT_STR TIME_STR
1   214	    0116  BA 005Dr			 MOV DX,OFFSET TIME_STR
1   215	    0119  B4 09			     MOV AH,9
1   216	    011B  CD 21				 INT 21H
    217	    011D  8A 1E	008Ar			 mov bl,HOURS
    218	    0121  88 1E	008Fr			 mov CHAR_PACKED,bl
    219	    0125  9A 00000000se			 call CONV_ASCII
    220	    012A  A2 007Fr			 mov [T_STR], AL
    221	    012D  88 26	0080r			 mov [T_STR]+1,	AH
    222	    0131  C6 06	0081r 3A		 mov [T_STR]+2,	':'
    223	    0136  8A 1E	008Br			 mov bl,MINUTES
    224	    013A  88 1E	008Fr			 mov CHAR_PACKED,bl
    225	    013E  9A 00000000se			 call CONV_ASCII
    226	    0143  A2 0082r			 mov [T_STR]+3,	AL
    227	    0146  88 26	0083r			 mov [T_STR]+4,	AH
    228	    014A  C6 06	0084r 3A		 mov [T_STR]+5,	':'
Turbo Assembler	 Version 4.1	    04/21/15 13:45:18	    Page 5
final.asm



    229	    014F  8A 1E	008Cr			 mov bl,SECONDS
    230	    0153  88 1E	008Fr			 mov CHAR_PACKED,bl
    231	    0157  9A 00000000se			 call CONV_ASCII
    232	    015C  A2 0085r			 mov [T_STR]+6,	AL
    233	    015F  88 26	0086r			 mov [T_STR]+7,	AH
    234						 ;
    235	    0163  B0 01				 mov al,1
    236	    0165  B7 00				 mov bh,0
    237	    0167  B3 E4				 mov bl,0E4h	 ;1110_0000b
    238	    0169  B9 0008			 mov cx,8
    239	    016C  B2 20				 mov dl,32
    240	    016E  B6 06				 mov dh,6
    241	    0170  BD 007Fr			 mov bp, offset	T_STR
    242	    0173  B4 13				 mov ah,13h
    243	    0175  CD 10				 int 10h
    244	    0177  E9 FEB1			 jmp BEGIN		 ;return to menu loop
    245
    246	    017A			 QUIT:
    247	    017A  B4 4C				 MOV AH,4CH
    248	    017C  CD 21			     INT 21H
    249	    017E			 MAIN ENDP
    250					      END MAIN
Turbo Assembler	 Version 4.1	    04/21/15 13:45:18	    Page 6
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "04/21/15"
??FILENAME			  Text	 "final	  "
??TIME				  Text	 "13:45:18"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 _TEXT
@CODESIZE			  Text	 0
@CPU				  Text	 0F0FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 FINAL
@INTERFACE			  Text	 000H
@MODEL				  Text	 2
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
BEGIN				  Near	 _TEXT:002B
CENTURY				  Byte	 DGROUP:006F
CHAR_H				  Byte	 DGROUP:0090
CHAR_L				  Byte	 DGROUP:0091
CHAR_PACKED			  Byte	 DGROUP:008F
CLK_STATUS			  Byte	 DGROUP:0073
CONV_ASCII			  Far	 ----:---- Extern
DATE_STR			  Byte	 DGROUP:004C
DAY				  Byte	 DGROUP:0071
DAYLIGHT			  Byte	 DGROUP:008D
D_STR				  Byte	 DGROUP:0074
GETDATE				  Near	 _TEXT:00A8
GETTIME				  Near	 _TEXT:0111
GET_DATE			  Far	 ----:---- Extern
GET_TIME			  Far	 ----:---- Extern
HOURS				  Byte	 DGROUP:008A
MAIN				  Far	 _TEXT:0000
MENU_STR			  Byte	 DGROUP:0000
MINUTES				  Byte	 DGROUP:008B
MONTH				  Byte	 DGROUP:0070
OPT1				  Byte	 DGROUP:0013
OPT2				  Byte	 DGROUP:002A
OPT3				  Byte	 DGROUP:0041
QUIT				  Near	 _TEXT:017A
RTC_STATUS			  Byte	 DGROUP:008E
SECONDS				  Byte	 DGROUP:008C
TIME_STR			  Byte	 DGROUP:005D
T_STR				  Byte	 DGROUP:007F
USR_INPUT			  Byte	 DGROUP:006E
YEAR				  Byte	 DGROUP:0072

Macro Name

GET_CHAR
GET_CHARNE
GET_STR
PRINT_CHAR
PRINT_STR
Turbo Assembler	 Version 4.1	    04/21/15 13:45:18	    Page 7
Symbol Table



RET_DOS

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  STACK				  16  0040 Para	  Stack	  STACK
  _DATA				  16  0092 Word	  Public  DATA
_TEXT				  16  017E Word	  Public  CODE
