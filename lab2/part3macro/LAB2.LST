Turbo Assembler	 Version 4.1	    02/25/15 14:28:18	    Page 1
lab2.asm



      1				     INCLUDE lab2.mac
1     2				     PRINT_STR MACRO STRING
1     3					     MOV DX,OFFSET STRING
1     4					     MOV AH,9
1     5					     INT 21H
1     6				     ENDM
1     7
1     8				     GET_STR MACRO BUFFER
1     9					     MOV DX,OFFSET BUFFER
1    10					     MOV AH,0AH
1    11					     INT 21H
1    12				     ENDM
1    13
1    14				     GET_CHAR MACRO CHAR
1    15					     MOV AH,01H
1    16					     INT 21H
1    17					     MOV CHAR,AL
1    18				     ENDM
1    19
1    20				     GET_CHARNE	MACRO
1    21					     MOV AH,07H
1    22					     INT 21H
1    23				     ENDM
     24	0000			     .model small
     25	0000			     .stack 100h
     26	0000			     .data
     27	0000  0A 0D 50 6C 65 61	73+  MENU_STRING     db	0AH,0DH,"Please	select an option from the menu below",0Ah,0Dh
     28	      65 20 73 65 6C 65	63+
     29	      74 20 61 6E 20 6F	70+
     30	      74 69 6F 6E 20 66	72+
     31	      6F 6D 20 74 68 65	20+
     32	      6D 65 6E 75 20 62	65+
     33	      6C 6F 77 0A 0D
     34	002F  61 29 20 45 6E 74	65+		     db	"a) Enter any character",0Ah,0Dh
     35	      72 20 61 6E 79 20	63+
     36	      68 61 72 61 63 74	65+
     37	      72 0A 0D
     38	0047  62 29 20 44 69 73	70+		     db	"b) Display any	character",0Ah,0Dh
     39	      6C 61 79 20 61 6E	79+
     40	      20 63 68 61 72 61	63+
     41	      74 65 72 0A 0D
     42	0061  63 29 20 45 6E 74	65+		 db "c)	Enter any string",0Ah,0Dh
     43	      72 20 61 6E 79 20	73+
     44	      74 72 69 6E 67 0A	0D
     45	0076  64 29 20 44 69 73	70+		 db "d)	Display	any string",0Ah,0Dh
     46	      6C 61 79 20 61 6E	79+
     47	      20 73 74 72 69 6E	67+
     48	      0A 0D
     49	008D  65 29 20 45 78 69	74+		 db "e)	Exit the program",0Ah,0Dh,'$'
     50	      20 74 68 65 20 70	72+
     51	      6F 67 72 61 6D 0A	0D+
     52	      24
     53
     54	00A3  0A 0D 45 6E 74 65	72+  PROMPT_A db 0AH,0DH,"Enter	a character: ",'$'
     55	      20 61 20 63 68 61	72+
     56	      61 63 74 65 72 3A	20+
     57	      24
     58	00B9  0A 0D 43 68 61 72	61+  PROMPT_B db 0AH,0DH,"Character entered is:	",'$'
     59	      63 74 65 72 20 65	6E+
     60	      74 65 72 65 64 20	69+
     61	      73 3A 20 24
     62	00D2  0A 0D 45 6E 74 65	72+  PROMPT_C db 0AH,0DH,"Enter	a string: ",'$'
     63	      20 61 20 73 74 72	69+
     64	      6E 67 3A 20 24
     65	00E5  0A 0D 53 74 72 69	6E+  PROMPT_D db 0AH,0DH,"String entered is: ",'$'
     66	      67 20 65 6E 74 65	72+
     67	      65 64 20 69 73 3A	20+
     68	      24
     69	00FB  0A 0D 49 6E 76 61	6C+  PROMPT_ERR	db 0AH,0DH,"Invalid Input",'$'
     70	      69 64 20 49 6E 70	75+
     71	      74 24
     72
     73	010B  ??		     CHAR db ?								     ;to hold  +
     74				     character from option a
     75	010C  80 24 80*(24)	     STRING db 128,'$',128 dup('$')		     ;to hold string from option c
Turbo Assembler	 Version 4.1	    02/25/15 14:28:18	    Page 2
lab2.asm
LAB 2 PART 2-- MENU DRIVEN PROGRAM


     76
     77	018E			     .code
     78				     ;SUBROUTINE TO CHECK FOR VALID MENU INPUT
     79				     ;------------------------------
     80	0000			     COMPARE PROC
     81	0000  3C 61			     cmp al,'a'				     ;check for	option a (read	       +
     82				     character)
     83	0002  74 41			     je	OPT_A				     ;jump to OPTION_A if option a     +
     84				     selected
     85	0004  3C 41			     cmp al,'A'				     ;check for	uppercase A
     86	0006  74 3D			     je	OPT_A
     87
     88	0008  3C 62			     cmp al,'b'				     ;check for	option b
     89	000A  74 49			     je	OPT_B				     ;
     90	000C  3C 42			     cmp al,'B'				     ;check uppercase B
     91	000E  74 45			     je	OPT_B
     92
     93	0010  3C 63			     cmp al,'c'
     94	0012  74 52			     je	OPT_C
     95	0014  3C 43			     cmp al,'C'
     96	0016  74 4E			     je	OPT_C
     97
     98	0018  3C 64			     cmp al,'d'
     99	001A  74 5A			     je	OPT_D
    100	001C  3C 44			     cmp al,'D'
    101	001E  74 56			     je	OPT_D
    102
    103	0020  3C 65			     cmp al,'e'
    104	0022  74 62			     je	OPT_E
    105	0024  3C 45			     cmp al,'E'
    106	0026  74 5E			     je	OPT_E
    107
    108					     PRINT_STR PROMPT_ERR    ;if we get	here then no valid options were	       +
    109				     selected
1   110	0028  BA 00FBr			     MOV DX,OFFSET PROMPT_ERR
1   111	002B  B4 09			     MOV AH,9
1   112	002D  CD 21			     INT 21H
    113
    114	002F  EB 06 90			     jmp MENU_LOOP	     ;loop main	menu till valid	option is selected
    115	0032			     COMPARE ENDP
    116				     ;------------------------------
    117
    118	0032			     main proc
    119	0032  B8 0000s		     mov ax,@data    ;initialize data segment
    120	0035  8E D8		     mov ds,ax
    121
    122	0037			     MENU_LOOP:
    123
    124						     PRINT_STR MENU_STRING		     ;print prompt to screen
1   125	0037  BA 0000r			     MOV DX,OFFSET MENU_STRING
1   126	003A  B4 09			     MOV AH,9
1   127	003C  CD 21			     INT 21H
    128						     GET_CHARNE				     ;read character (no echo)
1   129	003E  B4 07			     MOV AH,07H
1   130	0040  CD 21			     INT 21H
    131	0042  E8 FFBB				     CALL COMPARE			     ;check user-input against +
    132				     menu options
    133	0045			     OPT_A:
    134					     ;READ A CHAR
    135						     PRINT_STR PROMPT_A			     ;display instructions for +
    136				     option a
1   137	0045  BA 00A3r			     MOV DX,OFFSET PROMPT_A
1   138	0048  B4 09			     MOV AH,9
1   139	004A  CD 21			     INT 21H
    140						     ;mov ah,01h				     ;read char	option +
    141				     (with echo)
    142						     ;int 21h					     ;invoke interrupt
    143						     ;mov CHAR,al			     ;copy char	in AL to CHAR
    144						     GET_CHAR CHAR
1   145	004C  B4 01			     MOV AH,01H
1   146	004E  CD 21			     INT 21H
1   147	0050  A2 010Br			     MOV CHAR,AL
    148	0053  EB E2				     jmp MENU_LOOP			     ;return to	the menu
    149	0055			     OPT_B:
    150					     ;PRINT CHAR
Turbo Assembler	 Version 4.1	    02/25/15 14:28:18	    Page 3
lab2.asm
LAB 2 PART 2-- MENU DRIVEN PROGRAM


    151	0055  BA 00B9r				     mov dx,offset PROMPT_B  ;option b prompt
    152	0058  B4 09				     mov ah,9				     ;print string
    153	005A  CD 21				     int 21h				     ;print option b prompt
    154	005C  B4 02				     mov ah,02				     ;print single character   +
    155				     (char in DL)
    156	005E  8A 16 010Br			     mov dl,CHAR		     ;copy CHAR	to DL
    157	0062  CD 21				     int 21h				     ;invoke interrupt
    158	0064  EB D1				     jmp MENU_LOOP		     ;return to	loop
    159	0066			     OPT_C:
    160					     ;READ STRING
    161	0066  BA 00D2r				     mov dx,offset PROMPT_C  ;option b prompt
    162	0069  B4 09				     mov ah,9				     ;print string
    163	006B  CD 21				     int 21h				     ;print option b prompt
    164	006D  B4 0A				     mov ah,0Ah				     ;read string option       +
    165				     (string in	DX)
    166	006F  BA 010Cr				     mov dx,offset STRING    ;move location of string buffer to	DX
    167	0072  CD 21				     int 21h				     ;invoke interrupt
    168	0074  EB C1				     jmp MENU_LOOP		     ;return to	loop
    169	0076			     OPT_D:
    170					     ;PRINT STRING
    171	0076  BA 00E5r				     mov dx,offset PROMPT_D  ;option b prompt
    172	0079  B4 09				     mov ah,9				     ;print string
    173	007B  CD 21				     int 21h				     ;print option b prompt
    174	007D  B4 09				     mov ah,09				     ;print string option      +
    175				     (string in	DX)
    176	007F  BA 010Er				     mov dx,offset STRING+2  ;move location of string to DX
    177	0082  CD 21				     int 21h				     ;invoke interrupt
    178	0084  EB B1				     jmp MENU_LOOP		     ;return to	loop
    179	0086			     OPT_E:
    180					     ;EXIT PROGRAM
    181	0086  B8 4C00		     mov ax, 4c00h				     ;return to	DOS
    182	0089  CD 21		     int 21h
    183	008B			     main endp
    184				     end main
Turbo Assembler	 Version 4.1	    02/25/15 14:28:18	    Page 4
Symbol Table
LAB 2 PART 2-- MENU DRIVEN PROGRAM



Symbol Name			  Type	 Value

??DATE				  Text	 "02/25/15"
??FILENAME			  Text	 "lab2	  "
??TIME				  Text	 "14:28:18"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 _TEXT
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 LAB2
@INTERFACE			  Text	 000H
@MODEL				  Text	 2
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
CHAR				  Byte	 DGROUP:010B
COMPARE				  Near	 _TEXT:0000
MAIN				  Near	 _TEXT:0032
MENU_LOOP			  Near	 _TEXT:0037
MENU_STRING			  Byte	 DGROUP:0000
OPT_A				  Near	 _TEXT:0045
OPT_B				  Near	 _TEXT:0055
OPT_C				  Near	 _TEXT:0066
OPT_D				  Near	 _TEXT:0076
OPT_E				  Near	 _TEXT:0086
PROMPT_A			  Byte	 DGROUP:00A3
PROMPT_B			  Byte	 DGROUP:00B9
PROMPT_C			  Byte	 DGROUP:00D2
PROMPT_D			  Byte	 DGROUP:00E5
PROMPT_ERR			  Byte	 DGROUP:00FB
STRING				  Byte	 DGROUP:010C

Macro Name

GET_CHAR
GET_CHARNE
GET_STR
PRINT_STR

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  STACK				  16  0100 Para	  Stack	  STACK
  _DATA				  16  018E Word	  Public  DATA
_TEXT				  16  008B Word	  Public  CODE
