Turbo Assembler	 Version 4.1	    03/10/15 14:21:30	    Page 1
lab3.asm



      1				     INCLUDE lab3.mac
1     2				     PRINT_STR MACRO STRING
1     3					     MOV DX,OFFSET STRING
1     4					 MOV AH,9
1     5					     INT 21H
1     6				     ENDM
1     7
1     8				     GET_STR MACRO BUFFER
1     9					     MOV DX,OFFSET BUFFER
1    10					     MOV AH,0AH
1    11					     INT 21H
1    12				     ENDM
1    13
1    14				     GET_CHAR MACRO CHAR
1    15					     MOV AH,01H
1    16					     INT 21H
1    17					     MOV CHAR,AL
1    18				     ENDM
1    19
1    20				     GET_CHARNE	MACRO
1    21					     MOV AH,07H		     ;no echo option
1    22					     INT 21H
1    23				     ENDM
1    24
1    25				     PRINT_CHAR	MACRO CHAR
1    26					     MOV DL,CHAR
1    27					     MOV AH,02H
1    28					     INT 21H
1    29				     ENDM
1    30
1    31				     RET_DOS MACRO
1    32					     MOV AX,4C00H    ;return to	DOS
1    33					     INT 21H
1    34				     ENDM
     35	0000			     .model small
     36	0000			     .stack 100h
     37	0000			     .data
     38	0000  41 53 43 49 49 20	69+  PROMPT_STR	db "ASCII is: ",'$'  ;string to	clarify	program	purpose
     39	      73 3A 20 24
     40	000B  11 81 21 47 22 97	49+  HEX_ARRAY db 011H,081H,021H,047H,022H,097H,049H,090H,043H,007H
     41	      90 43 07
     42	      =0009		     ARRAY_SIZE	EQU 9				     ;10 total 0-9
     43	0015  ??		     VAL_MAX db	?				     ;location to store	first ASCII char
     44	0016  ??		     VAL_MIN db	?				     ;location to store	second ASCII char
     45	0017			     .code
     46	0000			     main proc
     47	0000  B8 0000s		     mov ax,@data				     ;
     48	0003  8E D8		     mov ds,ax						     ;initialize data segment
     49	0005  B9 0000		     MOV CX,0						     ;initialize counter with 0
     50	0008  8A 36 000Br	     MOV DH,HEX_ARRAY		     ;initialize max value w/ first value in array
     51	000C  8A 16 000Br	     MOV DL,HEX_ARRAY		     ;initialize min value w/ first value in array
     52	0010			     BEGIN_LOOP:
     53				     ;compare VAL_MAX to array first
     54	0010  41						     inc CX					     ;increment	    +
     55				     counter
     56	0011  FE 06 000Br					     inc HEX_ARRAY
     57	0015  83 F9 09						     cmp CX,ARRAY_SIZE			     ;cmp(d,s) = d-s
Turbo Assembler	 Version 4.1	    03/10/15 14:21:30	    Page 2
lab3.asm
LAB 3


     58	0018  77 28						     ja	END_LOOP				     ;once counter  +
     59				     CX	reaches	10 we have check every number
     60	001A			     CMP_MAX:
     61	001A  3A 36 000Br					     cmp DH,HEX_ARRAY			     ;cmp(d,s) = d-s
     62	001E  77 04						     ja	CMP_MIN					     ;val < val_max +
     63				     ->	check minimum
     64	0020  72 0C						     jb	NEW_MAX					     ;val > val_max +
     65				     ->	new max
     66	0022  74 EC						     je	BEGIN_LOOP			     ;dont care	if they	are +
     67				     equal
     68	0024			     CMP_MIN:
     69	0024  3A 16 000Br					     cmp DL,HEX_ARRAY			     ;cmp(d,s) = d-s
     70	0028  77 0E						     ja	NEW_MIN					     ;val < val_min +
     71				     ->	new min
     72	002A  72 E4						     jb	BEGIN_LOOP			     ;val > val_min -> check+
     73				     next value	in array
     74	002C  74 E2						     je	BEGIN_LOOP			     ;dont care	if they're  +
     75				     equal
     76	002E			     NEW_MAX:
     77	002E  8A 36 000Br					     mov DH,HEX_ARRAY			     ;move value in array to+
     78				     max value location
     79	0032  88 36 0015r					     mov VAL_MAX,DH
     80	0036  EB D8						     jmp BEGIN_LOOP			     ;check next value in   +
     81				     array
     82	0038			     NEW_MIN:
     83	0038  8A 16 000Br					     mov DL,HEX_ARRAY			     ;move value in array to+
     84				     min value location
     85	003C  88 36 0016r					     mov VAL_MIN,DH
     86	0040  EB CE						     jmp BEGIN_LOOP			     ;check next value in   +
     87				     array
     88	0042			     END_LOOP:
     89	0042  8A 26 0015r	     MOV AH,VAL_MAX
     90	0046  A0 0016r		     MOV AL,VAL_MIN
     91				     RET_DOS									     ;return to	dos
1    92	0049  B8 4C00			     MOV AX,4C00H    ;return to	DOS
1    93	004C  CD 21			     INT 21H
     94	004E			     main endp
     95				     end main
Turbo Assembler	 Version 4.1	    03/10/15 14:21:30	    Page 3
Symbol Table
LAB 3



Symbol Name			  Type	 Value

??DATE				  Text	 "03/10/15"
??FILENAME			  Text	 "lab3	  "
??TIME				  Text	 "14:21:30"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 _TEXT
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 LAB3
@INTERFACE			  Text	 000H
@MODEL				  Text	 2
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
ARRAY_SIZE			  Number 0009
BEGIN_LOOP			  Near	 _TEXT:0010
CMP_MAX				  Near	 _TEXT:001A
CMP_MIN				  Near	 _TEXT:0024
END_LOOP			  Near	 _TEXT:0042
HEX_ARRAY			  Byte	 DGROUP:000B
MAIN				  Near	 _TEXT:0000
NEW_MAX				  Near	 _TEXT:002E
NEW_MIN				  Near	 _TEXT:0038
PROMPT_STR			  Byte	 DGROUP:0000
VAL_MAX				  Byte	 DGROUP:0015
VAL_MIN				  Byte	 DGROUP:0016

Macro Name

GET_CHAR
GET_CHARNE
GET_STR
PRINT_CHAR
PRINT_STR
RET_DOS

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  STACK				  16  0100 Para	  Stack	  STACK
  _DATA				  16  0017 Word	  Public  DATA
_TEXT				  16  004E Word	  Public  CODE
